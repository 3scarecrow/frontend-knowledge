(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{358:function(v,_,t){v.exports=t.p+"assets/img/full-process.ad6ebc3f.png"},394:function(v,_,t){"use strict";t.r(_);var s=t(42),a=Object(s.a)({},(function(){var v=this,_=v.$createElement,s=v._self._c||_;return s("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[s("h1",{attrs:{id:"关键渲染路径"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#关键渲染路径"}},[v._v("#")]),v._v(" 关键渲染路径")]),v._v(" "),s("blockquote",[s("p",[v._v("从接收到 HTML、CSS 和 JavaScript 字节到对其进行必需的处理，从而将它们转变成渲染的像素的过程称为"),s("strong",[v._v("关键渲染路径")])])]),v._v(" "),s("p",[v._v("关键渲染路径包括以下步骤：")]),v._v(" "),s("ul",[s("li",[v._v("构建对象模型\n"),s("ul",[s("li",[v._v("HTML 标记转换为文档对象模型（DOM）")]),v._v(" "),s("li",[v._v("CSS 标记转换为 CSS 对象模型（CSSOM）")])])]),v._v(" "),s("li",[v._v("渲染树构建")]),v._v(" "),s("li",[v._v("布局")]),v._v(" "),s("li",[v._v("绘制")])]),v._v(" "),s("h2",{attrs:{id:"构建对象模型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#构建对象模型"}},[v._v("#")]),v._v(" 构建对象模型")]),v._v(" "),s("h3",{attrs:{id:"构建-dom"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#构建-dom"}},[v._v("#")]),v._v(" 构建 DOM")]),v._v(" "),s("p",[s("img",{attrs:{src:t(358),alt:"对象模型构建全过程"}})]),v._v(" "),s("p",[v._v("HTML 字节被转换为 DOM，需要经过以下步骤：")]),v._v(" "),s("ol",[s("li",[s("strong",[v._v("转换:")]),v._v(" 浏览器从磁盘或网络读取 HTML 的原始字节，并根据文件的指定编码（如 URF-8）将它们转换为字符。")]),v._v(" "),s("li",[s("strong",[v._v("标记化:")]),v._v(" 浏览器将字符串转换为 W3C HTML5 标准规定的各种标记，例如，"),s("code",[v._v("<html>")]),v._v("、"),s("code",[v._v("<body>")]),v._v("。每个令牌都具有特殊含义和一组规则。")]),v._v(" "),s("li",[s("strong",[v._v("词法分析:")]),v._v(" 令牌转换为定义其属性和规则的“对象”，即节点")]),v._v(" "),s("li",[s("strong",[v._v("DOM 构建:")]),v._v(" 最后，由于 HTML 标记定义不同标记之间的关系（一些标记包含在其他标记内），创建的对象链接在一个树结构内，最终构建成 DOM 树")])]),v._v(" "),s("p",[v._v("其中数据的转换过程为：")]),v._v(" "),s("p",[v._v("字节 -> 字符 -> 标记 -> 节点 -> DOM")]),v._v(" "),s("h3",{attrs:{id:"构建-cssom"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#构建-cssom"}},[v._v("#")]),v._v(" 构建 CSSOM")]),v._v(" "),s("p",[v._v("CSSOM 的构建也需要经过上面 DOM 构建的步骤，将字节转换为字符，字符经过标记化转换为标记，令牌经过词法分析转换为节点，节点再构建为 CSSOM 树")]),v._v(" "),s("h3",{attrs:{id:"构建渲染树"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#构建渲染树"}},[v._v("#")]),v._v(" 构建渲染树")]),v._v(" "),s("p",[v._v("DOM 树和 CSSOM 树构建完成后，浏览器将它们合并为渲染树")]),v._v(" "),s("p",[v._v("构建渲染树，浏览器需要完成以下步骤：")]),v._v(" "),s("ul",[s("li",[v._v("从 DOM 树的根节点开始遍历每个可见节点\n"),s("ul",[s("li",[v._v("某些节点不可见（例如脚本脚本、元标记等），因为它们不会体现在渲染输出中，所以会被忽略。")]),v._v(" "),s("li",[v._v('某些节点通过 CSS 隐藏，因此在渲染树中也会被忽略，例如设置了 "display: none" 属性的节点，但是该节点仍然存在于 DOM 树中，只是不在渲染树中。')])])]),v._v(" "),s("li",[v._v("对于每个可见节点，为其找到适配的 CSSOM 规则并应有它们。")]),v._v(" "),s("li",[v._v("派发出具有内容及其计算样式的可见节点")])]),v._v(" "),s("p",[v._v("最终输入的渲染树包含了屏幕上的所有可见节点的内容及其样式信息。而构建完渲染树后，就可以进入“布局”阶段。")]),v._v(" "),s("h3",{attrs:{id:"布局"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#布局"}},[v._v("#")]),v._v(" 布局")]),v._v(" "),s("p",[v._v("在构建渲染树阶段，浏览器已经计算了可见节点的内容及其计算样式，但还需计算它们在设备视口内的确切位置和尺寸，这就是“布局”阶段。")]),v._v(" "),s("p",[v._v("浏览器从渲染树的根节点开始进行遍历，确定每个元素在视口内的确切位置和尺寸，所有相对的测量值都转换为屏幕上的绝对像素。")]),v._v(" "),s("p",[v._v("最后，在知道了可见节点的内容、计算样式及其几何信息后，就可以将渲染树中的每个节点转换为屏幕上的实际像素。即进入“绘制”阶段。")]),v._v(" "),s("h3",{attrs:{id:"绘制"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#绘制"}},[v._v("#")]),v._v(" 绘制")]),v._v(" "),s("p",[v._v("将渲染树中的每个节点转换为屏幕上的实际像素。")])])}),[],!1,null,null,null);_.default=a.exports}}]);